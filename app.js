'use strict';

const line = require('@line/bot-sdk');
const express = require('express');
const config = require('./config.json');
const contents = require('./contents.json');

// create LINE SDK client
const client = new line.Client(config);
const app = express();

app.get('/webhook', (req, res) => res.end(`Webhook is working fine sir.`));

// webhook callback
app.post('/webhook', line.middleware(config), (req, res) => {
  // req.body.events should be an array of events
  if (!Array.isArray(req.body.events)) {
    return res.status(500).end();
  }

  // handle events separately
  Promise.all(req.body.events.map(handleEvent))
    .then(() => res.end())
    .catch((err) => {
      console.error(err);
      res.status(500).end();
    });
});

// simple reply function
const replyText = (token, texts) => {
  texts = Array.isArray(texts) ? texts : [texts];
  return client.replyMessage(
    token,
    texts.map((text) => ({ type: 'text', text }))
  );
};

// callback function to handle a single event
function handleEvent(event) {
  if (event.replyToken && event.replyToken.match(/^(.)\1*$/)) {
    return console.log("Hook recieved: " + JSON.stringify(event.message));
  }

  switch (event.type) {
    case 'message':
      const message = event.message;
      switch (message.type) {
        case 'text':
          return handleText(message, event.replyToken);
        case 'sticker':
          return handleSticker(message, event.replyToken);
        default:
          throw new Error(`Unknown message: ${JSON.stringify(message)}`);
      }
    case 'follow': // greeting event
      return client.replyMessage(
        event.replyToken, contents["register-function"]
      );
    case 'unfollow':
      return console.log(`Unfollowed this bot: ${JSON.stringify(event)}`);

    default:
      throw new Error(`Unknown event: ${JSON.stringify(event)}`);
  }
}

function handleText(message, replyToken) {
  switch (message.text) {
    case '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô':
      return client.replyMessage(
        replyToken, contents["report-function"]
      );
    case '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï':
      return client.replyMessage(
        replyToken, contents["view-function"]
      );
    // let t = getHours()
    // // check time must not exceed 4-8 o'clock
    // if (inRange(t, 4, 8)) {
    //   return client.replyMessage(
    //     replyToken, contents["menu-count"]
    //   );
    // } else {
    //   return client.replyMessage(
    //     replyToken, contents["menu-count-ctt"]
    //   );
    // }
    case '‡∏ô‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏î‡∏¥‡πâ‡∏ô‡πÅ‡∏ö‡∏ö count to ten':
      return client.replyMessage(
        replyToken, contents["menu-count-ctt-start"]
      );
    case '‡∏ô‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏î‡∏¥‡πâ‡∏ô‡πÅ‡∏ö‡∏ö sadovsky':
      // return client.replyMessage(
      //   replyToken, contents["menu-count-sadovsky-start"]
      // );
      let h = getHours()
      // check time must not exceed 4-8 o'clock
      if (inRange(h, 4, 10)) {
        return client.replyMessage(
          replyToken, contents["menu-count-sadovsky-start"]
        );
      } else {
        return replyText(replyToken, ["‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡πÅ‡∏ö‡∏ö sadovsky ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞üòÖ ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏°‡πà‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô 10.00 ‡∏ô.", "‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏°‡πà‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‚è≥‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏°‡∏∑‡πâ‡∏≠‡∏ô‡∏∞‡∏Ñ‡∏∞\nüåû‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á 11.30 ‡∏ô.\nüåô‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡πá‡∏ô 17.00 ‡∏ô.", "‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏ô‡∏±‡∏ö‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ä‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö üí°‡πÄ‡∏£‡∏≤‡∏Ç‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏°‡πà‡∏ô‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏î‡∏¥‡πâ‡∏ô‡πÅ‡∏ö‡∏ö count to ten ‡πÅ‡∏ó‡∏ô‡∏Ñ‡πà‡∏∞üëçüèª"])
      }
    case '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï':
      return client.replyMessage(
        replyToken, contents["menu-manual"]
      );
    case '‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢': // manual 1
      return client.replyMessage(
        replyToken, contents["menu-manual-1"]
      )
    case '‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 1':
      return client.replyMessage(
        replyToken, contents["menu-manual-1-1"]
      )
    case '‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 2':
      return client.replyMessage(
        replyToken, contents["menu-manual-1-2"]
      )
    case '‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 3':
      return client.replyMessage(
        replyToken, contents["menu-manual-1-3"]
      )
    case '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢': // manual 2
      return client.replyMessage(
        replyToken, contents["menu-manual-2"]
      )
    case '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 1':
      return client.replyMessage(
        replyToken, contents["menu-manual-2-1"]
      )
    case '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 2':
      return client.replyMessage(
        replyToken, contents["menu-manual-2-2"]
      )
    case '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 3':
      return client.replyMessage(
        replyToken, contents["menu-manual-2-3"]
      )
    case '‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏°‡πà': // manual 3
      return client.replyMessage(
        replyToken, contents["menu-manual-3"]
      )
    case '‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏°‡πà': // manual 4
      return client.replyMessage(
        replyToken, contents["menu-manual-4"]
      )
    case '‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πà‡∏á‡∏à‡∏±‡∏ö‡∏õ‡∏•‡∏≤‡∏¢‡πÄ‡∏ó‡πâ‡∏≤':
      return client.replyMessage(
        replyToken, contents["menu-manual-4-1"]
      )
    case '‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πà‡∏á‡∏¢‡∏Å‡∏°‡∏∑‡∏≠‡∏î‡∏±‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏®':
      return client.replyMessage(
        replyToken, contents["menu-manual-4-2"]
      )
    case '‡∏ó‡πà‡∏≤‡πÇ‡∏Å‡πà‡∏á‡∏´‡∏•‡∏±‡∏á':
      return client.replyMessage(
        replyToken, contents["menu-manual-4-3"]
      )
    case '‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏ö‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡∏´‡∏ç‡∏¥‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏£‡∏†‡πå': // manual 5
      return client.replyMessage(
        replyToken, contents["menu-manual-5"]
      )
    case '‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡πÄ‡∏û‡∏®‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏£‡∏†‡πå':
      return client.replyMessage(
        replyToken, contents["menu-manual-6"]
      )
    case '‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢': // manual 7
      return client.replyMessage(
        replyToken, contents["menu-manual-7"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£': // manual 7-1
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1"]
      )
    case '‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ ‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1-1"]
      )
    case '‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏•‡∏≤‡∏¢‡∏°‡∏≤‡∏Å':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1-2"]
      )
    case '‡πÄ‡∏´‡∏á‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1-3"]
      )
    case '‡∏£‡πâ‡∏≠‡∏ô‡πÉ‡∏ô‡∏≠‡∏Å':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1-4"]
      )
    case '‡∏ó‡πâ‡∏≠‡∏á‡∏ú‡∏π‡∏Å':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1-5"]
      )
    case '‡∏£‡∏¥‡∏î‡∏™‡∏µ‡∏î‡∏ß‡∏á‡∏ó‡∏ß‡∏≤‡∏£':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-1-6"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î': // manual 7-2
      return client.replyMessage(
        replyToken, contents["menu-manual-7-2"]
      )
    case '‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏°':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-2-1"]
      )
    case '‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏≠‡∏î':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-2-2"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏≤‡∏¢‡πÉ‡∏à': // manual 7-3
      return client.replyMessage(
        replyToken, contents["menu-manual-7-3"]
      )
    case '‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-3-1"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏î‡∏π‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠': // manual 7-4
      return client.replyMessage(
        replyToken, contents["menu-manual-7-4"]
      )
    case '‡∏ï‡∏∞‡∏Ñ‡∏£‡∏¥‡∏ß':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-4-1"]
      )
    case '‡∏õ‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏á':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-4-2"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡∏ñ‡πà‡∏≤‡∏¢‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞': // manual 7-5
      return client.replyMessage(
        replyToken, contents["menu-manual-7-5"]
      )
    case '‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏ö‡πà‡∏≠‡∏¢':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-5-1"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á': // manual 7-6
      return client.replyMessage(
        replyToken, contents["menu-manual-7-6"]
      )
    case '‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-6-1"]
      )
    case '‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó': // manual 7-7
      return client.replyMessage(
        replyToken, contents["menu-manual-7-7"]
      )
    case '‡∏õ‡∏ß‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-7-1"]
      )
    case '‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÅ‡∏õ‡∏£‡∏õ‡∏£‡∏ß‡∏ô':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-7-2"]
      )
    case '‡∏õ‡∏ß‡∏î ‡∏ä‡∏≤‡∏ù‡πà‡∏≤‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-7-3"]
      )
    case '‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÜ': // manual 7-8
      return client.replyMessage(
        replyToken, contents["menu-manual-7-8"]
      )
    case '‡πÄ‡∏ó‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏ö‡∏ß‡∏°':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-8-1"]
      )
    case '‡∏ô‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏´‡∏•‡∏±‡∏ö':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-8-2"]
      )
    case '‡∏≠‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏µ‡∏¢':
      return client.replyMessage(
        replyToken, contents["menu-manual-7-8-3"]
      )
    case '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏£‡∏†‡πå': // manual 8
      return client.replyMessage(
        replyToken, contents["menu-manual-8"]
      )
    case '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 1':
      return client.replyMessage(
        replyToken, contents["menu-manual-8-1"]
      )
    case '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 2':
      return client.replyMessage(
        replyToken, contents["menu-manual-8-2"]
      )
    case '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏ó‡∏µ‡πà 3':
      return client.replyMessage(
        replyToken, contents["menu-manual-8-3"]
      )
    case '‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏Ñ‡∏•‡∏≠‡∏î': // manual 9
      return replyText(replyToken, contents["menu-manual-9"]["msg"]);
    case 'time':
      let x = new Date().toLocaleString("en-US", { timeZone: "Asia/Bangkok" });
      x = new Date(x).toString();
      return replyText(replyToken, x);
    case '1669':
      return client.replyMessage(
        replyToken, contents["1669"]
      )
    default:
      console.log(`Echo message to ${replyToken}: ${message.text}`);
  }
}

function handleSticker(message, replyToken) {
  return client.replyMessage(
    replyToken, contents["default-sticker"]
  );
}

function getHours() {
  let time = new Date().toLocaleString("en-US", { timeZone: "Asia/Bangkok" });
  time = new Date(time).getHours();

  return time
}

function inRange(value, min, max) {
  return ((value - min) * (value - max) <= 0);
}

// listen on port
const port = process.env.PORT || config.port;
app.listen(port, () => {
  console.log(`listening on ${port}`);
});
